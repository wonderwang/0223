<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2010 Magento Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
    $_helper = $this->helper('catalog/output');
    $_product = $this->getProduct();
	
    if ($this->helper('catalog/data')->getCategory()) {
        $_ccat = $this->helper('catalog/data')->getCategory();
    } else {
        $_ccats = $this->helper('catalog/data')->getProduct()->getCategoryIds();
        $_ccat = Mage::getModel('catalog/category')->load($_ccats[0]);
    } 
	//->addFieldToFilter('entity_id',array('eq'=>$_ccat->getData('entity_id')))
    $ppos         = $_ccat->getProductsPosition();
	$newblock = new Mage_Catalog_Block_Product_List();
//	$collection_of_products = $_ccat->getProductCollection()->addAttributeToSelect('*')->addAttributeToSort($this->getCurrentOrder(),$this->getCurrentDirection())->addAttributeToSort('position','asc')->addAttributeToSort('cat_index.product_id','asc')->addAttributeToSort('position','asc')->addAttributeToSort('cat_index.product_id','asc');
	
	
	$layer = Mage::getSingleton('catalog/layer');
	$layer->setCurrentCategory($_ccat);
//	echo (string)$layer->getProductCollection()->addAttributeToSelect('*')->addAttributeToSort($this->getCurrentOrder(),$this->getCurrentDirection())->getSelect();
	$collection_of_products = $layer->getProductCollection()->addAttributeToSelect('*')->addAttributeToSort($this->getCurrentOrder(),$this->getCurrentDirection());

	 // foreach($collection_of_products1 as $prd){
		 // echo "<pre>";
		 // print_r($prd->getData('entity_id'));
		 // echo "</pre>";
	 // }

//    arsort($ppos);
    $current_pid  = $this->helper('catalog/data')->getProduct()->getId();
    // build array from products positions
    $plist = array();
    foreach ($collection_of_products as $pid) {
        $plist[] = $pid->getID();
    }
    $curpos   = array_search($current_pid, $plist);
    // get link for prev product
    $previd   = isset($plist[$curpos-1])? $plist[$curpos-1] : $current_pid;
    $product  = Mage::getModel('catalog/product')->load($previd);
    $prevpos  = $curpos;
    while (!$product->isVisibleInCatalog()) {
        $prevpos -= 1;
        $nextid   = isset($plist[$prevpos])? $plist[$prevpos] : $current_pid;
        $product  = Mage::getModel('catalog/product')->load($nextid);
    }
    $prev_url = $product->getProductUrl();
    // get link for next product
    $nextid   = isset($plist[$curpos+1])? $plist[$curpos+1] : $current_pid;
    $product  = Mage::getModel('catalog/product')->load($nextid);
    $nextpos  = $curpos;
    while (!$product->isVisibleInCatalog()) {
        $nextpos += 1;
        $nextid   = isset($plist[$nextpos])? $plist[$nextpos] : $current_pid;
        $product  = Mage::getModel('catalog/product')->load($nextid);
    }
    $next_url = $product->getProductUrl();
    // get link for current category
    $more_url = $_ccat->getUrl(); 
	
	
?>
<div id = "prev_next" >
	<div class="previous_wrap"><button title="<?php echo $this->__('Previous Product') ?> " class="button_previous" onClick="javascript:location.href='<?php echo $prev_url; ?>'"><span><span><?php echo $this->__('Previous Product') ?></span></span></button></div>
	<div class="next_wrap"><button title="<?php echo $this->__('Next Product') ?>" class="button_next" onClick="javascript:location.href='<?php echo $next_url; ?>'"><span><span><?php echo $this->__('Next Product') ?></span></span></button></div>
</div>
<?php
//	echo $this->getCurrentOrder(),"--",$this->getCurrentDirection();
?>